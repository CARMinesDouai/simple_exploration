<?xml version="1.0"?>

<launch>

  
  <!--node pkg="rviz" type="rviz" name="rviz" args="-d $(find robulab)/rviz_cfg/exploration.rviz" if="$(arg show_rviz)"/-->

  

  <!--node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find turtlebot_tf)/yaml_tf/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot_tf)/yaml_tf/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_tf)/yaml_tf/costmap_common_params.yaml" command="load" ns="local_costmap" />  
    <rosparam file="$(find turtlebot_tf)/yaml_tf/local_costmap_params.yaml" command="load" />  

    <rosparam file="$(find turtlebot_tf)/yaml_tf/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_tf)/yaml_tf/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_tf)/yaml_tf/global_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_tf)/yaml_tf/navfn_global_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
  </node-->

  <node pkg="pose_path_publisher" type="pose_path_publisher" name="pose_path_publisher" output="screen">
  	<!-- the frame where the robot pose and path will be exprese: ONLY odom or map -->
        <param name="target_frame_name" value="map" />
        <!-- the output topics names, puting an empty name ("") mean topic will not be published (DO NOT EMPTY BOTH PLZ.!)-->
        <param name="pose_topic_name" value="posegmapping" />
        <param name="path_topic_name" value="" />
        <param name="publish_frequency_" value="10.0" />
  </node>
  <!--node pkg="simple_exploration" type="simple_exploration" name="simple_exploration" >
  </node-->

  <!--used to compute frontiers by   rosrun phrontier_exploration headless phrontier_explorationpackage_extract_frontiers -->
  <node pkg="costmap_2d" type="costmap_2d_node" name="costmap_for_exploration_global">
    
    <rosparam ns="costmap" subst_value="true">
      global_frame: /map
      robot_base_frame: base_link
      update_frequency: 0.2
      publish_frequency: 0.2
      rolling_window: false
      always_send_full_costmap: true

      # Map management parameters
      unknown_cost_value: 255
      
      robot_radius: 0.30
      plugins: 
        - {name: static, type: "costmap_2d::StaticLayer"}
        - {name: inflation,        type: "costmap_2d::InflationLayer"}  
      static:
        #Can pull data from gmapping, map_server or a non-rolling costmap            
        map_topic: /map
        subscribe_to_updates: true 
      inflation:
        inflation_radius: 0.30

    </rosparam>
  </node>
  
  <node pkg="phrontier_exploration" type="headless" name="exploration_global" args="phrontier_explorationpackage_extract_frontiers_bis">
    <param name="map_topic" value="/costmap_for_exploration_global/costmap/costmap"/>
    <param name="frontier_topic" value="phrontier_global"/>
  </node>
  
  <!--node pkg="costmap_2d" type="costmap_2d_node" name="costmap_for_exploration_local">
    
    <rosparam ns="costmap" subst_value="true">
      global_frame: /map
      robot_base_frame: base_link
      update_frequency: 0.3
      publish_frequency: 1.0
      static_map: false
      rolling_window: true
      width: 6.0
      height: 6.0
      origin_x: 0.0
      origin_y: 0.0

      always_send_full_costmap: true

      # Map management parameters
      unknown_cost_value: 255
      
      robot_radius: 0.30
      plugins: 
        - {name: static, type: "costmap_2d::StaticLayer"}
        - {name: inflation,        type: "costmap_2d::InflationLayer"}  
      static:
        #Can pull data from gmapping, map_server or a non-rolling costmap            
        map_topic: /map
        subscribe_to_updates: true 
      inflation:
        inflation_radius: 0.30

    </rosparam>
  </node-->



</launch>
  
  
